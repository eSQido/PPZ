#Tworzenie lokalizacji projektu
    $ProjectLocalisation="c:\AutoScriptResult"
    $DrivesLocalisation=$ProjectLocalisation+"\Drives"
    $VMLocalisation=$ProjectLocalisation+"\VM"
    $BasicDrives=$DrivesLocalisation+"\BasicDrives"
    New-Item -Path $ProjectLocalisation -ItemType Directory
    New-Item -Path $DrivesLocalisation -ItemType Directory
    New-Item -Path $BasicDrives -ItemType Directory
    New-Item -Path $VMLocalisation -ItemType Directory
#Tworzenie transkryptu projektu
    $scriptTranscript=$ProjectLocalisation+"\log"
    if(Test-Path -Path $scriptTranscript){
        Write-Host "Istnieje lokalizacja $scriptTranscript" -ForegroundColor Red
    }else{
        Write-Host "Utworzono folder do przechowywania danych $scriptTranscript" -ForegroundColor Green
    }
    Start-Transcript $scriptTranscript
#Przenoszenie dysk√≥w podstawowych z folderu skryptu do docelowej lokalizacji
    $scriptPath = split-path -parent $MyInvocation.MyCommand.Definition
    $windowsServerBasicDriveInitPath=$scriptPath+"\windowsServerBasicDrive.vhdx"
    $windowsClientBasicDriveInitPath=$scriptPath+"\windowsClientBasicDrive.vhdx"
    Move-Item -Path $windowsServerBasicDriveInitPath -Destination $BasicDrives
    Move-Item -Path $windowsClientBasicDriveInitPath -Destination $BasicDrives
    $windowsServerBasicDrivePath=$BasicDrives+"\windowsServerBasicDrive.vhdx"
    $windowsClientBasicDrivePath=$BasicDrives+"\windowsClientBasicDrive.vhdx"
#Tworzenie maszyn wirtualnych
    $VMcount=3
    $VMname="VM"
    for($i=1;$i -le $VMcount;$i++){
        New-VHD -ParentPath $windowsClientBasicDrivePath -Path ($DrivesLocalisation="\VM$iDiffDrive.vhdx") -Differencing
        new-vm -Name ($VMname+$i) -Path $VMLocalisation -VHDPath ($DrivesLocalisation+"\VM$iDiffDrive.vhdx")
    }
    New-VHD -ParentPath $windowsServerBasicDrivePath -Path ($DrivesLocalisation+"\ServerDiffDrive.vhdx") -Differencing
    new-vm -Name ($VMname+"Server") -Path $VMLocalisation -VHDPath ($DrivesLocalisation+"\ServerDiffDrive.vhdx")
#Konfiguracja serwera
    $domainName="ocean.local"
    $passwordServer = ConvertTo-SecureString "zaq1@WSX" -AsPlainText -Force
    $credServer= New-Object System.Management.Automation.PSCredential ("Administrator", $password )
    Get-VM -Name ($VMname+"Server") | Get-VMNetworkAdapter | Connect-VMNetworkAdapter -SwitchName "Default Switch"
    Start-VM -Name ($VMname+"Server")
    Enter-PSSession -VMName ($VMname+"Server") -Credential $credServer
    Rename-Computer -NewName ($VMname+"Server")
    Remove-NetIPAddress -Confirm True
    New-NetIPAddress -InterfaceIndex 7 -IPAddress 10.10.10.1 -PrefixLength 24
    Set-DnsClientServerAddress -InterfaceIndex 7 -ServerAddresses ("10.10.10.1")
    Install-windowsfeature AD-domain-services
    Install-WindowsFeature -Name AD-Domain-Services -IncludeManagementTools
    Install-ADDSDomainController -InstallDns -Credential (Get-Credential $domainName\administrator) -DomainName $domainName -SafeModeAdministratorPassword (ConvertTo-SecureString -AsPlainText $passwordServer -Force)
    
    Exit-PSSession
    Stop-VM -Name ($VMname+"Server")
#Konfiguracja maszyn klienckich
    $passwordUser = ConvertTo-SecureString "zaq1@WSX" -AsPlainText -Force
    $credUser= New-Object System.Management.Automation.PSCredential ("user", $password )
    $VMIpAddress="10.10.10.2"
    for($i=1;$i -le $VMcount;$i++){
        Get-VM -Name ($VMname+$i) | Get-VMNetworkAdapter | Connect-VMNetworkAdapter -SwitchName "Default Switch"
        Start-VM -Name ($VMname+$i)
        Enter-PSSession -VMName ($VMname+$i) -Credential $credUser
        Rename-Computer -NewName ($VMname+$i)
        Remove-NetIPAddress -Confirm True
        New-NetIPAddress -InterfaceIndex 7 -IPAddress ($VMIpAddress+$i) -PrefixLength 24
    
        Exit-PSSession
        Stop-VM -Name ($VMname+$i)
    }
